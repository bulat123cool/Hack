local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local UserInputService = game:GetService("UserInputService")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ScreenGui"
screenGui.Parent = PlayerGui
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder= 10
screenGui.AutoLocalize = true
screenGui.IgnoreGuiInset = true
screenGui.ClipToDeviceSafeArea = true

-- Create ScrollingFrame
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "ScrollingFrame"
scrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
scrollingFrame.Size = UDim2.new(0, 250, 0, 250)
scrollingFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
scrollingFrame.AnchorPoint = Vector2.new(0.5, 0.5)
scrollingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
scrollingFrame.BorderSizePixel = 2
scrollingFrame.ScrollBarThickness = 12
scrollingFrame.Active = true
scrollingFrame.Visible = true
scrollingFrame.Parent = screenGui

local grad1 = Instance.new("UIGradient")
grad1.Parent = scrollingFrame
grad1.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.new(0, 0.0666667, 1)),
	ColorSequenceKeypoint.new(1, Color3.new(1, 0, 0.815686))
})

local quit = Instance.new("TextButton")
quit.Name = "b"
quit.Size = UDim2.new(1, 0, 0, 20)
quit.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
quit.Text = "Quit"
quit.TextScaled = true
quit.TextColor3 = Color3.fromRGB(255, 255, 255)
quit.Parent = scrollingFrame


-- Add UIListLayout for demonstration
local layout = Instance.new("UIListLayout")
layout.Parent = scrollingFrame
layout.Padding = UDim.new(0, 13)

local title = Instance.new("TextLabel")
title.Name = "a"
title.Parent = scrollingFrame
title.Size = UDim2.new(1, 0, 0, 50)
title.TextScaled = true
title.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
title.TextColor3 = Color3.new(1, 1, 1)
title.Text = "Brick hack"
title.BackgroundTransparency = 0.8
local grad = Instance.new("UIGradient")
grad.Parent = title
grad.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.new(0.2, 0, 1)),
	ColorSequenceKeypoint.new(1, Color3.new(0.74902, 0, 1))
})

-- Add demo content
local flySpeed = 50
local flying = false
local flyBox = Instance.new("TextBox")
flyBox.Name = "c"
flyBox.Parent = scrollingFrame
flyBox.Size = UDim2.new(1, 0, 0, 32)
flyBox.PlaceholderText = "fly speed = 50"
flyBox.Text = ""
flyBox.TextScaled = true
flyBox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
flyBox.TextColor3 = Color3.new(1, 1, 1)
flyBox.ClearTextOnFocus = false
flyBox.BackgroundTransparency = 0.8
flyBox.InputEnded:Connect(function()
	if tonumber(flyBox.Text) then
		flySpeed = tonumber(flyBox.Text)
		flyBox.PlaceholderText = "fly speed = "..flyBox.Text
	end	
end)
local flyButton = Instance.new("TextButton")
flyButton.Parent = scrollingFrame
flyButton.Name = "d"
flyButton.Size = UDim2.new(1, 0, 0, 32)
flyButton.TextScaled = true
flyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
flyButton.TextColor3 = Color3.new(1, 1, 1)
flyButton.BackgroundTransparency = 0.8
flyButton.Activated:Connect(function()
	flying = not flying
	if flying then
		local bodyVelocity = Instance.new("BodyVelocity")
		bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
		bodyVelocity.Velocity = Vector3.new(0, 0, 0)
		bodyVelocity.Parent = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
	else
		LocalPlayer.Character:WaitForChild("HumanoidRootPart"):FindFirstChild("BodyVelocity"):Destroy()
		LocalPlayer.Character.Humanoid.EvaluateStateMachine = true
		LocalPlayer.Character.Humanoid.PlatformStand = false
	end
end)
----------------------------------------------------------------
local storeSpeed = 0
local setSpeed = 100
local set = false
local spBox = Instance.new("TextBox")
spBox.Name = "f"
spBox.Parent = scrollingFrame
spBox.Size = UDim2.new(1, 0, 0, 32)
spBox.PlaceholderText = "run speed = 100"
spBox.Text = ""
spBox.TextScaled = true
spBox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
spBox.TextColor3 = Color3.new(1, 1, 1)
spBox.ClearTextOnFocus = false
spBox.BackgroundTransparency = 0.8
spBox.InputEnded:Connect(function()
	if tonumber(spBox.Text) then
		setSpeed = tonumber(spBox.Text)
		spBox.PlaceholderText = "run speed = "..spBox.Text
	end	
end)
local spButton = Instance.new("TextButton")
spButton.Name = "g"
spButton.Parent = scrollingFrame
spButton.Size = UDim2.new(1, 0, 0, 32)
spButton.TextScaled = true
spButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
spButton.TextColor3 = Color3.new(1, 1, 1)
spButton.BackgroundTransparency = 0.8
spButton.Activated:Connect(function()
	set = not set
	if set then
		storeSpeed = LocalPlayer.Character.Humanoid.WalkSpeed
	else
		LocalPlayer.Character.Humanoid.WalkSpeed = storeSpeed
	end
end)
----------------------------------------------------------------
local espEn = false
local espB = Instance.new("TextButton")
espB.Parent = scrollingFrame
espB.Size = UDim2.new(1, 0, 0, 32)
espB.TextScaled = true
espB.Name = "e"
espB.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
espB.TextColor3 = Color3.new(1, 1, 1)
espB.BackgroundTransparency = 0.8
-----------------------------------------------------------------------
task.spawn(function()
	while true do
		task.wait(.1)
		grad.Rotation += 2
		if flying then
			flyButton.Text = "flying = true"
		else
			flyButton.Text = "flying = false"
		end
		if set then
			spButton.Text = "running = true"
		else
			spButton.Text = "running = false"
		end
		if espEn then
			espB.Text = "espEn = true"
		else
			espB.Text = "espEn = false"
		end
		if set then
			task.wait(.1)
			LocalPlayer.Character.Humanoid.WalkSpeed = setSpeed
		end
	end
end)
espB.Activated:Connect(function()
	espEn = not espEn
	--local players = game.Players:GetPlayers()
	--if espEn then
	--	for i,plr in pairs(players) do
	--		local dead = false
	--		local char = plr.Character
	--		if plr.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
	--			print("dead")
	--			task.spawn(function()
	--				for a,c in char:GetDescendants() do
	--					if c:IsA("Highlight") then
	--						wait(.1)
	--						game.Debris:AddItem(c,0)
	--					end
	--				end
	--			end)
	--			dead = true
	--		end
	--		if dead then return end
	--		if char:FindFirstChild("goyda") then return end
	--		local HL = Instance.new("Highlight")
	--		HL.Name = "goyda"
	--		HL.Parent = char
	--		HL.FillColor = Color3.new(0, 0.6, 1)
	--		wait(.1)
	--	end
	--else
	--	for i,plr in pairs(players) do
	--		local char = plr.Character
	--		task.spawn(function()
	--			for a,c in char:GetDescendants() do
	--				if c:IsA("Highlight") then
	--					c:Destroy()
	--					wait(.1)
	--				end
	--			end
	--		end)
	--	end
	--end
end)
----------------------------------------
local changed = false
game["Run Service"].RenderStepped:Connect(function()
	if flying then
		changed = true
		local hum:Humanoid = LocalPlayer.Character.Humanoid
		hum:ChangeState(Enum.HumanoidStateType.GettingUp)
		hum.EvaluateStateMachine = false
		hum.PlatformStand = true
		LocalPlayer.Character:WaitForChild("HumanoidRootPart"):FindFirstChild("BodyVelocity").Velocity = Vector3.new(0, 0, 0)
		local camera = workspace.CurrentCamera
		local direction = Vector3.new()

		if UserInputService:IsKeyDown(Enum.KeyCode.W) then
			direction = direction + camera.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then
			direction = direction - camera.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then
			direction = direction - camera.CFrame.RightVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then
			direction = direction + camera.CFrame.RightVector
		end
		local plus = 0
		local char = LocalPlayer.Character
		for i,v in pairs(char:GetChildren()) do
			if v:IsA("BasePart") then
				v.Massless = true
			end
		end
		--plus = direction * flySpeed
		--plus *= 0.1
		--plus *= 2.5
		LocalPlayer.Character:WaitForChild("HumanoidRootPart"):FindFirstChild("BodyVelocity").Velocity = direction * flySpeed
		--local ray = workspace:Raycast(LocalPlayer.Character.HumanoidRootPart.Position, LocalPlayer.Character.HumanoidRootPart.Position+plus*0.12)
		--if ray then
		--	plus = direction * ray.Distance
		--	print("part")
		--end
		--LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position+plus,LocalPlayer.Character.HumanoidRootPart.Position+plus+camera.CFrame.LookVector))
		LocalPlayer.Character.HumanoidRootPart.CFrame =CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position,LocalPlayer.Character.HumanoidRootPart.Position+camera.CFrame.LookVector)
		--LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position,LocalPlayer.Character.HumanoidRootPart.Position+camera.CFrame.LookVector * 2)
	else
		
		if not changed then return end
		local char = LocalPlayer.Character
		for i,v in pairs(char:GetChildren()) do
			if v:IsA("BasePart") then
				v.Massless = false
			end
		end
		
	end
end)
local dontHigh = {}
game["Run Service"].PreRender:Connect(function()
	local players = game:GetService("Players"):GetPlayers()
	--for i,v in pairs(workspace:GetChildren()) do
	--	if v:FindFirstChild("Humanoid") then
	--		if v:FindFirstChild("Humanoid").Health <= 0 then
	--			task.spawn(function()
	--				v:FindFirstChild("goyda"):Destroy()
	--				local f = false
	--				for i,v in pairs(dontHigh) do
	--					if v == v then
	--						f = true
	--					end
	--				end
	--				if f then return end
	--				table.insert(dontHigh, v)
	--				task.wait(game.Players.RespawnTime+1)
	--				for i,v in pairs(dontHigh) do
	--					if v == v then
	--						table.remove(dontHigh, i)
	--					end
	--				end
	--			end)
	--		end
	--	end
	--end
	if espEn then
		for i,plr in pairs(players) do
			local char = plr.Character
			if (LocalPlayer.Character.Head.Position - LocalPlayer.Character.Head.Position).Magnitude < 100 then
				if char:FindFirstChild("goyda") then return end
				local HL = Instance.new("Highlight")
				HL.Name = "goyda"
				HL.Parent = char
				HL.FillColor = Color3.new(0, 0.6, 1)
			end
		end
	else
		for i,plr in pairs(players) do
			if plr.Character:FindFirstChild("goyda") then
				plr.Character:FindFirstChild("goyda"):Destroy()
			end
		end
	end
end)

-- Function to update CanvasSize to match content
local function updateCanvasSize()
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
end

-- Connect to UIListLayout changes
layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSize)
-- Initial update
updateCanvasSize()

-- Drag logic
local dragging = false
local dragStart = nil
local startPos = nil

scrollingFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = scrollingFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        scrollingFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

quit.Activated:Connect(function()
	flying = false
	espEn = false
	screenGui:Destroy()
end)
